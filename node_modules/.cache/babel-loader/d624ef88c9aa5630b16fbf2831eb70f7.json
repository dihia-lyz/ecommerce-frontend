{"ast":null,"code":"var _jsxFileName = \"D:\\\\node js\\\\ecommerce-mern\\\\frontend\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1,\n    paritialVisibilityGutter: 60\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1,\n    paritialVisibilityGutter: 50\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    paritialVisibilityGutter: 30\n  }\n};\nconst images = [\"https://images.unsplash.com/photo-1549989476-69a92fa57c36?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\", \"https://images.unsplash.com/photo-1549396535-c11d5c55b9df?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\", \"https://images.unsplash.com/photo-1550133730-695473e544be?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\"];\n/* ADD THIS LINE */\n// Your custom Button group. CSS need to be added\n\nconst ButtonGroup = ({\n  next,\n  previous,\n  goToSlide,\n  ...rest\n}) => {\n  const {\n    carouselState: {\n      currentSlide\n    }\n  } = rest;\n  const lastImageIndex = images.length - 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-button-group\",\n    style: {\n      position: \"absolute\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => currentSlide === 0 ? goToSlide(lastImageIndex) : previous(),\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => currentSlide === lastImageIndex ? goToSlide(0) : next(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n/* TO THIS LINE */\n\n\n_c = ButtonGroup;\n\nconst Simple = ({\n  deviceType\n}) => {\n  _s();\n\n  /* ADD THIS LINE */\n  let carousel = useRef(null);\n  const lastImageIndex = images.length - 1;\n  useEffect(() => {\n    const autoloop = setInterval(() => {\n      if (carousel.state.currentSlide === lastImageIndex) {\n        carousel.goToSlide(0);\n      } else {\n        carousel.next();\n      }\n    }, 3000); // Your custom auto loop delay in ms\n\n    return () => clearInterval(autoloop);\n  }, []);\n  /* TO THIS LINE */\n\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    ssr: true,\n    deviceType: deviceType,\n    itemClass: \"image-item\",\n    responsive: responsive\n    /* ADD THIS LINE */\n    ,\n    ref: el => carousel = el,\n    arrows: false,\n    customButtonGroup: /*#__PURE__*/_jsxDEV(ButtonGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }, this)\n    /* TO THIS LINE */\n    ,\n    children: images.slice(0, 5).map((image, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: false,\n          alt: \"text\",\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: \"absolute\",\n            left: \"50%\",\n            bottom: 0,\n            color: \"white\",\n            transform: \" translateX(-50%)\"\n          },\n          children: [\"Legend:\", index, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Simple, \"nkIWAvCbTGrtcQHcZ0l//1VlZis=\");\n\n_c2 = Simple;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonGroup\");\n$RefreshReg$(_c2, \"Simple\");","map":{"version":3,"sources":["D:/node js/ecommerce-mern/frontend/src/components/Home.js"],"names":["React","useEffect","useRef","render","Carousel","responsive","desktop","breakpoint","max","min","items","paritialVisibilityGutter","tablet","mobile","images","ButtonGroup","next","previous","goToSlide","rest","carouselState","currentSlide","lastImageIndex","length","position","Simple","deviceType","carousel","autoloop","setInterval","state","clearInterval","el","slice","map","image","index","width","height","left","bottom","color","transform"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 1,\n    paritialVisibilityGutter: 60\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 1,\n    paritialVisibilityGutter: 50\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    paritialVisibilityGutter: 30\n  }\n};\nconst images = [\n  \"https://images.unsplash.com/photo-1549989476-69a92fa57c36?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\",\n  \"https://images.unsplash.com/photo-1549396535-c11d5c55b9df?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n  \"https://images.unsplash.com/photo-1550133730-695473e544be?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\"\n];\n\n  /* ADD THIS LINE */\n  // Your custom Button group. CSS need to be added\nconst ButtonGroup = ({ next, previous, goToSlide, ...rest }) => {\n  const {\n    carouselState: { currentSlide }\n  } = rest;\n  const lastImageIndex = images.length - 1;\n  return (\n    <div className=\"carousel-button-group\" style={{ position: \"absolute\" }}>\n      <button\n        onClick={() =>\n          currentSlide === 0 ? goToSlide(lastImageIndex) : previous()\n        }\n      >\n        Prev\n      </button>\n      <button\n        onClick={() =>\n          currentSlide === lastImageIndex ? goToSlide(0) : next()\n        }\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n  /* TO THIS LINE */\n\nconst Simple = ({ deviceType }) => {\n  /* ADD THIS LINE */\n  let carousel = useRef(null);\n  const lastImageIndex = images.length - 1;\n\n  useEffect(() => {\n    const autoloop = setInterval(() => {\n      if (carousel.state.currentSlide === lastImageIndex) {\n        carousel.goToSlide(0);\n      } else {\n        carousel.next();\n      }\n    }, 3000); // Your custom auto loop delay in ms\n    return () => clearInterval(autoloop);\n  }, []);\n  /* TO THIS LINE */\n\n  return (\n    <Carousel\n      ssr\n      deviceType={deviceType}\n      itemClass=\"image-item\"\n      responsive={responsive}\n      /* ADD THIS LINE */\n      ref={el => (carousel = el)}\n      arrows={false}\n      customButtonGroup={<ButtonGroup />}\n      /* TO THIS LINE */\n    >\n      {images.slice(0, 5).map((image, index) => {\n        return (\n          <div key={index} style={{ position: \"relative\" }}>\n            <img\n              draggable={false}\n              alt=\"text\"\n              style={{ width: \"100%\", height: \"100%\" }}\n              src={image}\n            />\n            <p\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                bottom: 0,\n                color: \"white\",\n                transform: \" translateX(-50%)\"\n              }}\n            >\n              Legend:{index}.\n            </p>\n          </div>\n        );\n      })}\n    </Carousel>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}