{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (key) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/node js/ecommerce-mern/frontend/src/components/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItems","action","key","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAuBC,MAAvB,KAAgC;AACzD,UAAQC,GAAR;AACI,SAAKL,WAAW,CAACM,WAAjB;AACI,YAAMC,IAAI,GAACH,MAAM,CAACI,OAAlB;AACA,YAAMC,SAAS,GAACP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAKA,CAAC,CAACC,OAAF,KAAYL,IAAI,CAACK,OAA3C,CAAhB;;AAEA,UAAGH,SAAH,EAAa;AACT,eAAM,EACF,GAAGP,KADD;AAEFC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAAKA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACG,OAAtB,GAAgCL,IAAhC,GAAsCI,CAA/D;AAFR,SAAN;AAIH,OALD,MAKM;AACF,eAAM,EACF,GAAGT,KADD;AAEFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBI,IAApB;AAFR,SAAN;AAIH;;AAEL,SAAKP,WAAW,CAACc,gBAAjB;AACI,aAAM,EACF,GAAGZ,KADD;AAEFC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAwBJ,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAYR,MAAM,CAACI,OAAhD;AAFR,OAAN;;AAIJ;AACE,aAAON,KAAP;AAvBN;AAyBC,CA1BM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReducer=(state={cartItems:[]}, action)=>{\r\nswitch (key) {\r\n    case actionTypes.ADD_TO_CART:\r\n        const item=action.payload; \r\n        const existItem=state.cartItems.find((x)=>x.product===item.product);\r\n\r\n        if(existItem){\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.map((x)=>x.product===existItem.product ? item :x)\r\n            }\r\n        }else {\r\n            return{\r\n                ...state,\r\n                cartItems:[...state.cartItems,item],\r\n            };\r\n        }\r\n        \r\n    case actionTypes.REMOVE_FROM_CART:\r\n        return{\r\n            ...state,\r\n            cartItems:state.cartItems.filter((x) =>x.product!==action.payload)\r\n        };\r\n    default:\r\n      return state;\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}