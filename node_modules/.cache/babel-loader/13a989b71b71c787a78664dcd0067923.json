{"ast":null,"code":"import * as actionTypes from \"../constants/productConstants\";\nimport axios from \"axios\";\nexport const getProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    console.log({\n      data\n    });\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeProductDetails = () => dispatch => {\n  dispatch({\n    type: actionTypes.GET_PRODUCT_DETAILS_RESET\n  });\n};","map":{"version":3,"sources":["D:/node js/ecommerce-mern/frontend/src/components/redux/actions/productActions.js"],"names":["actionTypes","axios","getProducts","dispatch","type","GET_PRODUCTS_REQUEST","data","get","GET_PRODUCTS_SUCCESS","payload","error","GET_PRODUCTS_FAIL","response","message","getProductDetails","id","GET_PRODUCT_DETAILS_REQUEST","console","log","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","removeProductDetails","GET_PRODUCT_DETAILS_RESET"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,+BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACK;AAApB,KAAD,CAAR;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACQ,oBADX;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACW,iBADX;AAEPF,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEIH,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAC3D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACgB;AAApB,KAAD,CAAR;AAEA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAW,iBAAgBQ,EAAG,EAA9B,CAAvB;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACZ,MAAAA;AAAD,KAAZ;AACIH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACmB,2BADX;AAEPV,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACoB,wBADX;AAEPX,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEIH,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMQ,oBAAoB,GAAG,MAAOlB,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,WAAW,CAACsB;AAApB,GAAD,CAAR;AACD,CAFM","sourcesContent":["import * as actionTypes from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const getProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\n\n    const { data } = await axios.get(\"/api/products\");\n\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\nconsole.log({data});\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const removeProductDetails = () => (dispatch) => {\n  dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\n};\n"]},"metadata":{},"sourceType":"module"}